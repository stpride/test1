name: Test Matrix

on:
  workflow_dispatch:
    
jobs:
  Preamble:
    runs-on: ubuntu-latest
    outputs:
      data: ${{ steps.setup.outputs.result }}
    steps:
      - name: Setup environments
        uses: actions/github-script@v6
        id: setup
        with:
          script: |
            const environments = [];
            environments.push({
              "environment": "fq6",
              "aws-region": "us-west-2",
              "account-number": "300120355739"
            });
            //environments.push({
            //  "environment": "automation-eu",
            //  "aws-region": "eu-central-1",
            //  "account-number": "786172653746"
            //});
            return environments;
      
  MonorepoLambdas:
    runs-on: ubuntu-latest
    outputs:
      data: ${{ steps.setup.outputs.result }}
    steps:
      - name: Run action
        id: setup
        uses: actions/github-script@v6
        with:
          script: |
            const lambdas = [];
            lambdas.push({
              "name": "lambda1",
              "dir": "lambdas/lambda1",
              "monorepo": true
            });
            lambdas.push({
              "name": "lambda2",
              "dir": "lambdas/lambda1",
              "monorepo": true
            });
            return lambdas;

  TerraformPreprocess:
    needs: [Preamble, MonorepoLambdas]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        deploy-environment: ${{ fromJson(needs.Preamble.outputs.data) }}
        lambdas: ${{ fromJson(needs.MonorepoLambdas.outputs.data) }}
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Step1
        shell: bash
        run: |
          echo "environment: ${{ matrix.deploy-environment.environment }}"
          echo "aws-region: ${{ matrix.deploy-environment.aws-region }}"
          echo "account-number: ${{ matrix.deploy-environment.account-number }}"
          echo "lambda: ${{ matrix.lambdas.name }}"
          echo "dir: ${{ matrix.lambdas.dir }}"
          echo "monorepo: ${{ matrix.lambdas.monorepo }}"
      #- name: Step 2
      #  shell: python
      #  run: |
      #    import json
      #    data={}
      #    data["environment"] = "${{ matrix.deploy-environment.environment }}"
      #    data["aws-region"] = "${{ matrix.deploy-environment.aws-region }}"
      #    data["account-number"] = "${{ matrix.deploy-environment.account-number }}"
      #    data["lambda"] = "${{ matrix.lambdas.name }}"
      #    data["dir"] = "${{ matrix.lambdas.dir }}"
      #    data["monorepo"] = "${{ matrix.lambdas.monorepo }}"
      #    with open("/tmp/mydata","w") as fp:
      #      json.dump(data,fp)
      #- name: Step 3
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: '${{ matrix.deploy-environment.environment }}#${{ matrix.lambdas.name }}'
      #    path: '/tmp/mydata'
      #    retention: 1
      #    overwrite: true
      - name: Step 2
        id: step2
        shell: bash
        run: |
          if [ "${{ matrix.lambdas.name }}" == "lambda1" ]; then
            echo "changes-found=true" >> $GITHUB_OUTPUT
          else
            echo "changes-found=false" >> $GITHUB_OUTPUT
          fi
      - name: Step 3
        id: step3
        uses: cloudposse/github-action-matrix-outputs-write@47bfd07b833c59443a15353094aa2802a7613501
        with:
          matrix-step-name: tpp-artifacts
          matrix-key: '${{ matrix.deploy-environment.environment }}__${{ matrix.lambdas.name }}'
          outputs: |-
            changes-found: ${{ steps.step2.outputs.changes-found }}
            pod: 'devops'
            image-found: false
  
  BuildandDeploy:
    needs: [Preamble, MonorepoLambdas, TerraformPreprocess]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        deploy-environment: ${{ fromJson(needs.Preamble.outputs.data) }}
        lambdas: ${{ fromJson(needs.MonorepoLambdas.outputs.data) }}
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Step 1
        uses: cloudposse/github-action-matrix-outputs-read@ea1c28d66c34b8400391ed74d510f66abc392d5e
        id: read
        with:
          matrix-step-name: tpp-artifacts
      - name: Step 2
        uses: actions/github-script@v6
        with:
          script: |
            console.log(JSON.stringify('${{ steps.read.outputs.result }}'));
          
